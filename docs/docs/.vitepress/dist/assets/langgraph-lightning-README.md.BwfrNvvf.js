import{_ as s,c as n,o as i,ag as l}from"./chunks/framework.Cf3FQAeg.js";const c=JSON.parse('{"title":"LangGraph Lightning ⚡","description":"","frontmatter":{},"headers":[],"relativePath":"langgraph-lightning-README.md","filePath":"langgraph-lightning-README.md","lastUpdated":1760223716000}'),e={name:"langgraph-lightning-README.md"};function t(r,a,p,h,o,g){return i(),n("div",null,[...a[0]||(a[0]=[l(`<h1 id="langgraph-lightning-⚡" tabindex="-1">LangGraph Lightning ⚡ <a class="header-anchor" href="#langgraph-lightning-⚡" aria-label="Permalink to &quot;LangGraph Lightning ⚡&quot;">​</a></h1><blockquote><p>基于 LangChain Academy 官方课程的深度解读与工程实战指南</p></blockquote><p><img src="https://img.shields.io/badge/LangGraph-Latest-green" alt="LangGraph Version"><img src="https://img.shields.io/badge/Python-3.11+-blue" alt="Python"><img src="https://img.shields.io/badge/License-MIT-yellow" alt="License"></p><h2 id="📖-项目简介" tabindex="-1">📖 项目简介 <a class="header-anchor" href="#📖-项目简介" aria-label="Permalink to &quot;📖 项目简介&quot;">​</a></h2><p><strong>LangGraph Lightning</strong> 是一本深度解读 <a href="https://academy.langchain.com/courses/intro-to-langgraph" target="_blank" rel="noreferrer">LangChain Academy</a> 官方课程的中文实战指南。本书不仅对原课程内容进行详细注解，更重要的是大幅扩展了代码示例，增加了丰富的工程实战案例，旨在帮助 AI-Native 开发者快速掌握 LangGraph 和 Multi-Agent 系统开发。</p><h3 id="🎯-核心目标" tabindex="-1">🎯 核心目标 <a class="header-anchor" href="#🎯-核心目标" aria-label="Permalink to &quot;🎯 核心目标&quot;">​</a></h3><ol><li><strong>术语通俗化</strong>：对所有 Python 和 LangGraph 术语进行深入浅出的解读</li><li><strong>代码实战化</strong>：在原课程基础上大规模扩展演示代码和工程案例</li><li><strong>门槛最小化</strong>：让零基础的 AI-Native 用户也能快速上手</li><li><strong>场景落地化</strong>：展示如何将 Multi-Agent 系统应用到实际业务中</li><li><strong>流程重塑化</strong>：探索生成式 AI 如何重塑传统业务流程</li></ol><h2 id="🌟-项目特色" tabindex="-1">🌟 项目特色 <a class="header-anchor" href="#🌟-项目特色" aria-label="Permalink to &quot;🌟 项目特色&quot;">​</a></h2><h3 id="相比原课程的增强" tabindex="-1">相比原课程的增强 <a class="header-anchor" href="#相比原课程的增强" aria-label="Permalink to &quot;相比原课程的增强&quot;">​</a></h3><table tabindex="0"><thead><tr><th>特性</th><th>原课程</th><th>LangGraph Lightning</th></tr></thead><tbody><tr><td><strong>语言</strong></td><td>英文</td><td>中文详细解读</td></tr><tr><td><strong>术语解释</strong></td><td>基础</td><td>深入通俗化讲解</td></tr><tr><td><strong>代码示例</strong></td><td>演示级</td><td>生产级 + 工程实战</td></tr><tr><td><strong>难度曲线</strong></td><td>中等</td><td>零基础友好</td></tr><tr><td><strong>实战案例</strong></td><td>少量</td><td>大量业务场景</td></tr><tr><td><strong>AI 辅助</strong></td><td>基础</td><td>深度整合 AI 开发工作流</td></tr></tbody></table><h3 id="适合人群" tabindex="-1">适合人群 <a class="header-anchor" href="#适合人群" aria-label="Permalink to &quot;适合人群&quot;">​</a></h3><ul><li>✅ <strong>AI-Native 开发者</strong>：想要快速掌握 LangGraph 的新手</li><li>✅ <strong>Python 初学者</strong>：需要详细 Python 知识点讲解</li><li>✅ <strong>业务开发者</strong>：希望将 AI 应用到实际业务场景</li><li>✅ <strong>架构师</strong>：探索 Multi-Agent 系统架构设计</li><li>✅ <strong>产品经理</strong>：了解 AI Agent 的能力边界和应用场景</li></ul><h2 id="📚-课程结构" tabindex="-1">📚 课程结构 <a class="header-anchor" href="#📚-课程结构" aria-label="Permalink to &quot;📚 课程结构&quot;">​</a></h2><p>本书基于 <a href="https://github.com/langchain-ai/langchain-academy" target="_blank" rel="noreferrer">LangChain Academy 官方课程</a>，包含以下模块：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>langgraph-lightning/</span></span>
<span class="line"><span>├── module-0/        # 第 0 章：Python 和 LangGraph 基础</span></span>
<span class="line"><span>│   ├── 0.1-Python Basics.md</span></span>
<span class="line"><span>│   └── 0.2-LangGraph Basics-详细解读.md</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├── module-1/        # 第 1 章：LangGraph 核心概念</span></span>
<span class="line"><span>│   ├── 1.1-simple-graph-详细解读.md</span></span>
<span class="line"><span>│   ├── 1.2-chain-详细解读.md</span></span>
<span class="line"><span>│   ├── 1.3-router-详细解读.md</span></span>
<span class="line"><span>│   ├── 1.4-agent-详细解读.md</span></span>
<span class="line"><span>│   ├── 1.5-agent-memory-详细解读.md</span></span>
<span class="line"><span>│   └── 1.6-deployment-详细解读.md</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├── module-2/        # 第 2 章：状态管理与记忆系统</span></span>
<span class="line"><span>│   ├── 2.1-state-schema-详细解读.md</span></span>
<span class="line"><span>│   ├── 2.2-state-reducers-详细解读.md</span></span>
<span class="line"><span>│   ├── 2.3-multiple-schemas-详细解读.md</span></span>
<span class="line"><span>│   ├── 2.4-trim-filter-messages-详细解读.md</span></span>
<span class="line"><span>│   ├── 2.5-chatbot-summarization-详细解读.md</span></span>
<span class="line"><span>│   └── 2.6-chatbot-external-memory-详细解读.md</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├── module-3/        # 第 3 章：人机协作与调试</span></span>
<span class="line"><span>│   ├── breakpoints-详细解读.md</span></span>
<span class="line"><span>│   ├── dynamic-breakpoints-详细解读.md</span></span>
<span class="line"><span>│   ├── edit-state-human-feedback-详细解读.md</span></span>
<span class="line"><span>│   ├── streaming-interruption-详细解读.md</span></span>
<span class="line"><span>│   └── time-travel-详细解读.md</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├── module-4/        # 第 4 章：高级架构模式</span></span>
<span class="line"><span>│   ├── 4.1-parallelization-详细解读.md</span></span>
<span class="line"><span>│   ├── 4.2-sub-graph-详细解读.md</span></span>
<span class="line"><span>│   ├── 4.3-map-reduce-详细解读.md</span></span>
<span class="line"><span>│   └── 4.4-research-assistant-详细解读.md</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├── module-5/        # 第 5 章：高级主题（规划中）</span></span>
<span class="line"><span>└── module-6/        # 第 6 章：生产部署（规划中）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h2 id="🎓-学习路径" tabindex="-1">🎓 学习路径 <a class="header-anchor" href="#🎓-学习路径" aria-label="Permalink to &quot;🎓 学习路径&quot;">​</a></h2><h3 id="第-0-章-基础入门" tabindex="-1">第 0 章：基础入门 <a class="header-anchor" href="#第-0-章-基础入门" aria-label="Permalink to &quot;第 0 章：基础入门&quot;">​</a></h3><p><strong>目标</strong>：理解 Python 基础和 LangChain 生态系统</p><ul><li>Python 核心概念（环境变量、列表推导、异步编程）</li><li>LangChain 和 LangGraph 的关系</li><li>Chat Models 的使用</li><li>工具集成（Tavily 搜索）</li></ul><h3 id="第-1-章-langgraph-核心" tabindex="-1">第 1 章：LangGraph 核心 <a class="header-anchor" href="#第-1-章-langgraph-核心" aria-label="Permalink to &quot;第 1 章：LangGraph 核心&quot;">​</a></h3><p><strong>目标</strong>：掌握图、节点、状态的基本概念</p><ul><li>构建第一个 LangGraph</li><li>Chain vs Router vs Agent</li><li>状态管理机制</li><li>Agent 记忆系统</li><li>本地部署和云部署</li></ul><h3 id="第-2-章-状态管理" tabindex="-1">第 2 章：状态管理 <a class="header-anchor" href="#第-2-章-状态管理" aria-label="Permalink to &quot;第 2 章：状态管理&quot;">​</a></h3><p><strong>目标</strong>：深入理解状态的定义和管理</p><ul><li>State Schema 设计</li><li>Reducers 的作用</li><li>多模式状态管理</li><li>消息过滤和裁剪</li><li>长期记忆和摘要</li></ul><h3 id="第-3-章-人机协作" tabindex="-1">第 3 章：人机协作 <a class="header-anchor" href="#第-3-章-人机协作" aria-label="Permalink to &quot;第 3 章：人机协作&quot;">​</a></h3><p><strong>目标</strong>：实现可控的 Human-in-the-Loop 工作流</p><ul><li>断点调试</li><li>动态断点</li><li>状态编辑</li><li>流式中断</li><li>时间旅行调试</li></ul><h3 id="第-4-章-高级模式" tabindex="-1">第 4 章：高级模式 <a class="header-anchor" href="#第-4-章-高级模式" aria-label="Permalink to &quot;第 4 章：高级模式&quot;">​</a></h3><p><strong>目标</strong>：构建复杂的 Multi-Agent 系统</p><ul><li>并行执行优化</li><li>子图模块化设计</li><li>Map-Reduce 模式</li><li>实战：构建研究助手</li></ul><h3 id="第-5-6-章-生产实战-即将推出" tabindex="-1">第 5-6 章：生产实战（即将推出） <a class="header-anchor" href="#第-5-6-章-生产实战-即将推出" aria-label="Permalink to &quot;第 5-6 章：生产实战（即将推出）&quot;">​</a></h3><ul><li>性能优化</li><li>监控和日志</li><li>安全性和权限</li><li>大规模部署</li></ul><h2 id="💡-核心特点" tabindex="-1">💡 核心特点 <a class="header-anchor" href="#💡-核心特点" aria-label="Permalink to &quot;💡 核心特点&quot;">​</a></h2><h3 id="_1-术语深度解读" tabindex="-1">1. 术语深度解读 <a class="header-anchor" href="#_1-术语深度解读" aria-label="Permalink to &quot;1. 术语深度解读&quot;">​</a></h3><p>每个 Python 和 LangGraph 概念都配有：</p><ul><li>📝 <strong>概念定义</strong>：清晰的术语解释</li><li>🔍 <strong>原理分析</strong>：为什么需要这个概念</li><li>💻 <strong>代码示例</strong>：可直接运行的示例</li><li>⚠️ <strong>常见陷阱</strong>：新手容易犯的错误</li><li>✅ <strong>最佳实践</strong>：生产环境推荐做法</li></ul><h3 id="_2-大规模代码扩展" tabindex="-1">2. 大规模代码扩展 <a class="header-anchor" href="#_2-大规模代码扩展" aria-label="Permalink to &quot;2. 大规模代码扩展&quot;">​</a></h3><p>原课程代码的基础上，每个主题都扩展了：</p><ul><li>🎯 <strong>完整实现</strong>：从头到尾的完整代码</li><li>🔧 <strong>变体示例</strong>：不同场景的实现方式</li><li>🚀 <strong>生产级代码</strong>：带错误处理、日志、测试</li><li>🏗️ <strong>架构设计</strong>：系统设计思路和权衡</li><li>📊 <strong>性能优化</strong>：Token 优化、速度优化</li></ul><h3 id="_3-工程实战案例" tabindex="-1">3. 工程实战案例 <a class="header-anchor" href="#_3-工程实战案例" aria-label="Permalink to &quot;3. 工程实战案例&quot;">​</a></h3><p>每个模块都包含真实业务场景：</p><ul><li>🤖 <strong>智能客服系统</strong>：多轮对话、意图识别</li><li>📚 <strong>知识库助手</strong>：RAG、向量检索</li><li>🔍 <strong>研究助手</strong>：网络搜索、信息整合</li><li>💼 <strong>业务流程自动化</strong>：审批、通知、数据处理</li><li>🎨 <strong>内容创作系统</strong>：多 Agent 协作创作</li></ul><h3 id="_4-ai-native-开发流程" tabindex="-1">4. AI-Native 开发流程 <a class="header-anchor" href="#_4-ai-native-开发流程" aria-label="Permalink to &quot;4. AI-Native 开发流程&quot;">​</a></h3><p>展示如何利用 AI 加速开发：</p><ul><li>🧠 <strong>AI 辅助编码</strong>：Claude/GPT 如何帮助你写代码</li><li>🐛 <strong>AI 调试</strong>：让 AI 帮你找 bug</li><li>📖 <strong>AI 学习</strong>：如何向 AI 提问以深化理解</li><li>🔄 <strong>迭代优化</strong>：AI 辅助的代码重构</li><li>📝 <strong>文档生成</strong>：AI 自动生成注释和文档</li></ul><h2 id="🚀-快速开始" tabindex="-1">🚀 快速开始 <a class="header-anchor" href="#🚀-快速开始" aria-label="Permalink to &quot;🚀 快速开始&quot;">​</a></h2><h3 id="环境要求" tabindex="-1">环境要求 <a class="header-anchor" href="#环境要求" aria-label="Permalink to &quot;环境要求&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3.11+</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> langchain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> langchain-openai</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> langchain-community</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> langgraph</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tavily-python</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="api-密钥配置" tabindex="-1">API 密钥配置 <a class="header-anchor" href="#api-密钥配置" aria-label="Permalink to &quot;API 密钥配置&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getpass </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getpass</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># OpenAI API Key</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.environ[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;OPENAI_API_KEY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getpass(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;OpenAI API Key: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># LangSmith (可选，用于追踪和调试)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.environ[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LANGSMITH_API_KEY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getpass(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LangSmith API Key: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.environ[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LANGSMITH_TRACING_V2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;true&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Tavily Search API (Module 4 需要)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.environ[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;TAVILY_API_KEY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getpass(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Tavily API Key: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="第一个-langgraph" tabindex="-1">第一个 LangGraph <a class="header-anchor" href="#第一个-langgraph" aria-label="Permalink to &quot;第一个 LangGraph&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> langchain_openai </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChatOpenAI</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> langgraph.graph </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StateGraph, MessagesState</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 定义节点</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> chatbot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(state: MessagesState):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;messages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ChatOpenAI(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gpt-4o&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).invoke(state[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;messages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])]}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 构建图</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StateGraph(MessagesState)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph.add_node(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chatbot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, chatbot)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph.set_entry_point(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chatbot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph.set_finish_point(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chatbot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> graph.compile()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> app.invoke({</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;messages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>详细教程请参考 <code>module-1/1.1-simple-graph-详细解读.md</code></p><h2 id="📖-与原课程的关系" tabindex="-1">📖 与原课程的关系 <a class="header-anchor" href="#📖-与原课程的关系" aria-label="Permalink to &quot;📖 与原课程的关系&quot;">​</a></h2><h3 id="原课程信息" tabindex="-1">原课程信息 <a class="header-anchor" href="#原课程信息" aria-label="Permalink to &quot;原课程信息&quot;">​</a></h3><ul><li><strong>官方主页</strong>：<a href="https://academy.langchain.com/courses/intro-to-langgraph" target="_blank" rel="noreferrer">https://academy.langchain.com/courses/intro-to-langgraph</a></li><li><strong>GitHub 仓库</strong>：<a href="https://github.com/langchain-ai/langchain-academy" target="_blank" rel="noreferrer">https://github.com/langchain-ai/langchain-academy</a></li><li><strong>授课团队</strong>：LangChain AI</li><li><strong>课程定位</strong>：LangGraph 官方入门课程</li></ul><h3 id="本书定位" tabindex="-1">本书定位 <a class="header-anchor" href="#本书定位" aria-label="Permalink to &quot;本书定位&quot;">​</a></h3><p><strong>LangGraph Lightning</strong> 是对原课程的：</p><ul><li>✅ <strong>深度解读</strong>：不是简单翻译，而是深入分析每个概念</li><li>✅ <strong>内容扩展</strong>：原课程基础上增加 3-5 倍的内容量</li><li>✅ <strong>实战强化</strong>：将演示级代码升级为生产级实现</li><li>✅ <strong>本地化适配</strong>：针对中文开发者的学习习惯和痛点</li></ul><h2 id="🎯-学习建议" tabindex="-1">🎯 学习建议 <a class="header-anchor" href="#🎯-学习建议" aria-label="Permalink to &quot;🎯 学习建议&quot;">​</a></h2><h3 id="初学者路径" tabindex="-1">初学者路径 <a class="header-anchor" href="#初学者路径" aria-label="Permalink to &quot;初学者路径&quot;">​</a></h3><ol><li><strong>第 0 章（2 天）</strong>：确保 Python 基础扎实</li><li><strong>第 1 章（1 周）</strong>：理解 LangGraph 核心概念</li><li><strong>第 2 章（1 周）</strong>：掌握状态管理</li><li><strong>第 3 章（3 天）</strong>：学会调试技巧</li><li><strong>第 4 章（1 周）</strong>：构建复杂系统</li><li><strong>项目实战（2 周）</strong>：选择一个场景深入实现</li></ol><h3 id="进阶开发者路径" tabindex="-1">进阶开发者路径 <a class="header-anchor" href="#进阶开发者路径" aria-label="Permalink to &quot;进阶开发者路径&quot;">​</a></h3><ul><li>快速浏览第 0-1 章</li><li>深入学习第 2-4 章</li><li>重点关注架构设计和性能优化</li><li>参与开源贡献和案例扩展</li></ul><h3 id="ai-辅助学习技巧" tabindex="-1">AI 辅助学习技巧 <a class="header-anchor" href="#ai-辅助学习技巧" aria-label="Permalink to &quot;AI 辅助学习技巧&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 推荐的 AI 提示词模板</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&quot;请解释 LangGraph 中的 [概念]，用简单的类比说明&quot;</span></span>
<span class="line"><span>&quot;这段代码为什么这样写：[代码片段]&quot;</span></span>
<span class="line"><span>&quot;如何用 LangGraph 实现 [业务场景]&quot;</span></span>
<span class="line"><span>&quot;帮我优化这段代码的性能：[代码]&quot;</span></span>
<span class="line"><span>&quot;这个错误是什么原因：[错误信息]&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="🤝-贡献指南" tabindex="-1">🤝 贡献指南 <a class="header-anchor" href="#🤝-贡献指南" aria-label="Permalink to &quot;🤝 贡献指南&quot;">​</a></h2><p>欢迎贡献！我们特别需要：</p><ul><li>📝 <strong>错误修正</strong>：发现文档或代码中的问题</li><li>💡 <strong>案例补充</strong>：添加新的实战案例</li><li>🌏 <strong>术语优化</strong>：改进术语翻译和解释</li><li>🎨 <strong>图表制作</strong>：添加架构图和流程图</li><li>🔧 <strong>代码改进</strong>：优化示例代码</li></ul><h3 id="贡献流程" tabindex="-1">贡献流程 <a class="header-anchor" href="#贡献流程" aria-label="Permalink to &quot;贡献流程&quot;">​</a></h3><ol><li>Fork 本仓库</li><li>创建特性分支：<code>git checkout -b feature/amazing-case</code></li><li>提交改动：<code>git commit -m &#39;Add amazing case&#39;</code></li><li>推送分支：<code>git push origin feature/amazing-case</code></li><li>提交 Pull Request</li></ol><h2 id="📧-联系方式" tabindex="-1">📧 联系方式 <a class="header-anchor" href="#📧-联系方式" aria-label="Permalink to &quot;📧 联系方式&quot;">​</a></h2><ul><li><strong>作者邮箱</strong>：brycewang2018@gmail.com</li><li><strong>GitHub Issues</strong>：欢迎提问和反馈</li><li><strong>讨论区</strong>：分享你的学习心得和项目案例</li></ul><h2 id="📄-许可证" tabindex="-1">📄 许可证 <a class="header-anchor" href="#📄-许可证" aria-label="Permalink to &quot;📄 许可证&quot;">​</a></h2><p>本项目采用 MIT 许可证 - 详见 <a href="./LICENSE.html">LICENSE</a> 文件</p><h2 id="🙏-致谢" tabindex="-1">🙏 致谢 <a class="header-anchor" href="#🙏-致谢" aria-label="Permalink to &quot;🙏 致谢&quot;">​</a></h2><ul><li>感谢 <strong>LangChain AI 团队</strong>创造了优秀的 LangGraph 框架和官方课程</li><li>感谢 <strong>LangChain Academy</strong> 提供了高质量的教学内容</li><li>感谢所有为本项目做出贡献的开发者</li></ul><h2 id="🌟-star-history" tabindex="-1">🌟 Star History <a class="header-anchor" href="#🌟-star-history" aria-label="Permalink to &quot;🌟 Star History&quot;">​</a></h2><p>如果这个项目对你有帮助，请给我们一个 ⭐ Star！</p><hr><p><strong>让我们一起，在生成式 AI 的助力下，重塑这个世界的业务流程！</strong> 🚀</p>`,82)])])}const k=s(e,[["render",t]]);export{c as __pageData,k as default};
