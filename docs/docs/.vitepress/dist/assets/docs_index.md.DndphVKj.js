import{_ as s,c as i,o as n,ag as l}from"./chunks/framework.Cf3FQAeg.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"LangGraph Lightning","text":"⚡ 快速掌握 LangGraph","tagline":"基于 LangChain Academy 的深度解读与工程实战指南","image":{"src":"/logo.svg","alt":"LangGraph Lightning"},"actions":[{"theme":"brand","text":"开始学习","link":"/module-0/0.2-LangGraph Basics-详细解读"},{"theme":"alt","text":"GitHub 仓库","link":"https://github.com/brycewang-stanford/langgraph-lightning"}]},"features":[{"icon":"📝","title":"术语通俗化","details":"对所有 Python 和 LangGraph 术语进行深入浅出的解读，让零基础的 AI-Native 用户也能快速上手"},{"icon":"💻","title":"代码实战化","details":"在原课程基础上大规模扩展演示代码和工程案例，从演示级升级到生产级实现"},{"icon":"🎯","title":"场景落地化","details":"展示如何将 Multi-Agent 系统应用到实际业务中，包含大量真实业务场景案例"},{"icon":"🚀","title":"门槛最小化","details":"每个概念都配有清晰的定义、原理分析、代码示例、常见陷阱和最佳实践"},{"icon":"🤖","title":"AI-Native 开发","details":"展示如何利用 AI 加速开发，包括 AI 辅助编码、调试、学习和代码重构"},{"icon":"🔄","title":"持续更新","details":"基于 LangChain Academy 官方课程，持续跟进最新内容和技术趋势"}]},"headers":[],"relativePath":"docs/index.md","filePath":"docs/index.md","lastUpdated":1760223716000}'),t={name:"docs/index.md"};function e(h,a,p,r,k,o){return n(),i("div",null,[...a[0]||(a[0]=[l(`<h2 id="📚-课程结构" tabindex="-1">📚 课程结构 <a class="header-anchor" href="#📚-课程结构" aria-label="Permalink to &quot;📚 课程结构&quot;">​</a></h2><p>本书包含 6 个主要模块，从基础到高级，循序渐进：</p><h3 id="第-0-章-基础入门" tabindex="-1">第 0 章：基础入门 <a class="header-anchor" href="#第-0-章-基础入门" aria-label="Permalink to &quot;第 0 章：基础入门&quot;">​</a></h3><ul><li>Python 核心概念</li><li>LangChain 和 LangGraph 生态</li><li>Chat Models 使用</li><li>工具集成</li></ul><h3 id="第-1-章-langgraph-核心" tabindex="-1">第 1 章：LangGraph 核心 <a class="header-anchor" href="#第-1-章-langgraph-核心" aria-label="Permalink to &quot;第 1 章：LangGraph 核心&quot;">​</a></h3><ul><li>构建第一个 LangGraph</li><li>Chain、Router 和 Agent</li><li>状态管理机制</li><li>Agent 记忆系统</li></ul><h3 id="第-2-章-状态管理" tabindex="-1">第 2 章：状态管理 <a class="header-anchor" href="#第-2-章-状态管理" aria-label="Permalink to &quot;第 2 章：状态管理&quot;">​</a></h3><ul><li>State Schema 设计</li><li>Reducers 的作用</li><li>多模式状态管理</li><li>消息过滤和裁剪</li></ul><h3 id="第-3-章-人机协作" tabindex="-1">第 3 章：人机协作 <a class="header-anchor" href="#第-3-章-人机协作" aria-label="Permalink to &quot;第 3 章：人机协作&quot;">​</a></h3><ul><li>断点调试</li><li>状态编辑</li><li>流式中断</li><li>时间旅行调试</li></ul><h3 id="第-4-章-高级模式" tabindex="-1">第 4 章：高级模式 <a class="header-anchor" href="#第-4-章-高级模式" aria-label="Permalink to &quot;第 4 章：高级模式&quot;">​</a></h3><ul><li>并行执行优化</li><li>子图模块化设计</li><li>Map-Reduce 模式</li><li>构建研究助手</li></ul><h3 id="第-5-6-章-生产实战" tabindex="-1">第 5-6 章：生产实战 <a class="header-anchor" href="#第-5-6-章-生产实战" aria-label="Permalink to &quot;第 5-6 章：生产实战&quot;">​</a></h3><ul><li>性能优化</li><li>监控和日志</li><li>安全性和权限</li><li>大规模部署</li></ul><h2 id="🎯-适合人群" tabindex="-1">🎯 适合人群 <a class="header-anchor" href="#🎯-适合人群" aria-label="Permalink to &quot;🎯 适合人群&quot;">​</a></h2><ul><li>✅ <strong>AI-Native 开发者</strong>：想要快速掌握 LangGraph 的新手</li><li>✅ <strong>Python 初学者</strong>：需要详细 Python 知识点讲解</li><li>✅ <strong>业务开发者</strong>：希望将 AI 应用到实际业务场景</li><li>✅ <strong>架构师</strong>：探索 Multi-Agent 系统架构设计</li><li>✅ <strong>产品经理</strong>：了解 AI Agent 的能力边界和应用场景</li></ul><h2 id="🚀-快速开始" tabindex="-1">🚀 快速开始 <a class="header-anchor" href="#🚀-快速开始" aria-label="Permalink to &quot;🚀 快速开始&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> langchain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> langchain-openai</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> langchain-community</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> langgraph</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tavily-python</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 配置 API 密钥</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OPENAI_API_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your-api-key&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 第一个 LangGraph</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> langchain_openai </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChatOpenAI</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> langgraph.graph </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StateGraph, MessagesState</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> chatbot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(state: MessagesState):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;messages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ChatOpenAI(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gpt-4o&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).invoke(state[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;messages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])]}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StateGraph(MessagesState)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph.add_node(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chatbot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, chatbot)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph.set_entry_point(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chatbot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph.set_finish_point(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chatbot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> graph.compile()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> app.invoke({</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;messages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="📖-与原课程的关系" tabindex="-1">📖 与原课程的关系 <a class="header-anchor" href="#📖-与原课程的关系" aria-label="Permalink to &quot;📖 与原课程的关系&quot;">​</a></h2><p>本书是对 <a href="https://academy.langchain.com/courses/intro-to-langgraph" target="_blank" rel="noreferrer">LangChain Academy</a> 官方课程的深度解读和扩展：</p><ul><li>✅ <strong>深度解读</strong>：不是简单翻译，而是深入分析每个概念</li><li>✅ <strong>内容扩展</strong>：原课程基础上增加 3-5 倍的内容量</li><li>✅ <strong>实战强化</strong>：将演示级代码升级为生产级实现</li><li>✅ <strong>本地化适配</strong>：针对中文开发者的学习习惯和痛点</li></ul><h2 id="🤝-贡献与反馈" tabindex="-1">🤝 贡献与反馈 <a class="header-anchor" href="#🤝-贡献与反馈" aria-label="Permalink to &quot;🤝 贡献与反馈&quot;">​</a></h2><p>欢迎通过以下方式参与：</p><ul><li>📝 <a href="https://github.com/brycewang-stanford/langgraph-lightning/issues" target="_blank" rel="noreferrer">提交 Issue</a> - 报告错误或提出建议</li><li>💡 <a href="https://github.com/brycewang-stanford/langgraph-lightning/pulls" target="_blank" rel="noreferrer">Pull Request</a> - 贡献代码或文档</li><li>📧 <a href="mailto:brycewang2018@gmail.com" target="_blank" rel="noreferrer">联系作者</a> - 直接反馈</li></ul><hr><p><strong>让我们一起，在生成式 AI 的助力下，重塑这个世界的业务流程！</strong> 🚀</p>`,27)])])}const c=s(t,[["render",e]]);export{d as __pageData,c as default};
