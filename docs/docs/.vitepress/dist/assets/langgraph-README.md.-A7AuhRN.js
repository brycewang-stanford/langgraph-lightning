import{_ as a,c as n,o as s,ag as i}from"./chunks/framework.Cf3FQAeg.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"langgraph-README.md","filePath":"langgraph-README.md","lastUpdated":1760223716000}'),t={name:"langgraph-README.md"};function o(l,e,r,p,d,c){return s(),n("div",null,[...e[0]||(e[0]=[i(`<p><img src="https://cdn.prod.website-files.com/65b8cd72835ceeacd4449a53/66e9eba1020525eea7873f96_LCA-big-green%20(2).svg" alt="LangChain Academy"></p><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>Welcome to LangChain Academy! This is a growing set of modules focused on foundational concepts within the LangChain ecosystem. Module 0 is basic setup and Modules 1 - 4 focus on LangGraph, progressively adding more advanced themes. In each module folder, you&#39;ll see a set of notebooks. A LangChain Academy accompanies each notebook to guide you through the topic. Each module also has a <code>studio</code> subdirectory, with a set of relevant graphs that we will explore using the LangGraph API and Studio.</p><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h2><h3 id="python-version" tabindex="-1">Python version <a class="header-anchor" href="#python-version" aria-label="Permalink to &quot;Python version&quot;">​</a></h3><p>To get the most out of this course, please ensure you&#39;re using Python 3.11 or later. This version is required for optimal compatibility with LangGraph. If you&#39;re on an older version, upgrading will ensure everything runs smoothly.</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>python3 --version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="clone-repo" tabindex="-1">Clone repo <a class="header-anchor" href="#clone-repo" aria-label="Permalink to &quot;Clone repo&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git clone https://github.com/langchain-ai/langchain-academy.git</span></span>
<span class="line"><span>$ cd langchain-academy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="create-an-environment-and-install-dependencies" tabindex="-1">Create an environment and install dependencies <a class="header-anchor" href="#create-an-environment-and-install-dependencies" aria-label="Permalink to &quot;Create an environment and install dependencies&quot;">​</a></h3><h4 id="mac-linux-wsl" tabindex="-1">Mac/Linux/WSL <a class="header-anchor" href="#mac-linux-wsl" aria-label="Permalink to &quot;Mac/Linux/WSL&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ python3 -m venv lc-academy-env</span></span>
<span class="line"><span>$ source lc-academy-env/bin/activate</span></span>
<span class="line"><span>$ pip install -r requirements.txt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="windows-powershell" tabindex="-1">Windows Powershell <a class="header-anchor" href="#windows-powershell" aria-label="Permalink to &quot;Windows Powershell&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PS&gt; python3 -m venv lc-academy-env</span></span>
<span class="line"><span>PS&gt; Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process</span></span>
<span class="line"><span>PS&gt; lc-academy-env\\scripts\\activate</span></span>
<span class="line"><span>PS&gt; pip install -r requirements.txt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="running-notebooks" tabindex="-1">Running notebooks <a class="header-anchor" href="#running-notebooks" aria-label="Permalink to &quot;Running notebooks&quot;">​</a></h3><p>If you don&#39;t have Jupyter set up, follow installation instructions <a href="https://jupyter.org/install" target="_blank" rel="noreferrer">here</a>.</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ jupyter notebook</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="setting-up-env-variables" tabindex="-1">Setting up env variables <a class="header-anchor" href="#setting-up-env-variables" aria-label="Permalink to &quot;Setting up env variables&quot;">​</a></h3><p>Briefly going over how to set up environment variables. You can also use a <code>.env</code> file with <code>python-dotenv</code> library.</p><h4 id="mac-linux-wsl-1" tabindex="-1">Mac/Linux/WSL <a class="header-anchor" href="#mac-linux-wsl-1" aria-label="Permalink to &quot;Mac/Linux/WSL&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ export API_ENV_VAR=&quot;your-api-key-here&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="windows-powershell-1" tabindex="-1">Windows Powershell <a class="header-anchor" href="#windows-powershell-1" aria-label="Permalink to &quot;Windows Powershell&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PS&gt; $env:API_ENV_VAR = &quot;your-api-key-here&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="set-openai-api-key" tabindex="-1">Set OpenAI API key <a class="header-anchor" href="#set-openai-api-key" aria-label="Permalink to &quot;Set OpenAI API key&quot;">​</a></h3><ul><li>If you don&#39;t have an OpenAI API key, you can sign up <a href="https://openai.com/index/openai-api/" target="_blank" rel="noreferrer">here</a>.</li><li>Set <code>OPENAI_API_KEY</code> in your environment</li></ul><h3 id="sign-up-and-set-langsmith-api" tabindex="-1">Sign up and Set LangSmith API <a class="header-anchor" href="#sign-up-and-set-langsmith-api" aria-label="Permalink to &quot;Sign up and Set LangSmith API&quot;">​</a></h3><ul><li>Sign up for LangSmith <a href="https://smith.langchain.com/" target="_blank" rel="noreferrer">here</a>, find out more about LangSmith</li><li>and how to use it within your workflow <a href="https://www.langchain.com/langsmith" target="_blank" rel="noreferrer">here</a>, and relevant library <a href="https://docs.smith.langchain.com/" target="_blank" rel="noreferrer">docs</a>!</li><li>Set <code>LANGSMITH_API_KEY</code>, <code>LANGSMITH_TRACING_V2=true</code> <code>LANGSMITH_PROJECT=&quot;langchain-academy&quot;</code>in your environment</li></ul><h3 id="set-up-tavily-api-for-web-search" tabindex="-1">Set up Tavily API for web search <a class="header-anchor" href="#set-up-tavily-api-for-web-search" aria-label="Permalink to &quot;Set up Tavily API for web search&quot;">​</a></h3><ul><li><p>Tavily Search API is a search engine optimized for LLMs and RAG, aimed at efficient, quick, and persistent search results.</p></li><li><p>You can sign up for an API key <a href="https://tavily.com/" target="_blank" rel="noreferrer">here</a>. It&#39;s easy to sign up and offers a very generous free tier. Some lessons (in Module 4) will use Tavily.</p></li><li><p>Set <code>TAVILY_API_KEY</code> in your environment.</p></li></ul><h3 id="set-up-langgraph-studio" tabindex="-1">Set up LangGraph Studio <a class="header-anchor" href="#set-up-langgraph-studio" aria-label="Permalink to &quot;Set up LangGraph Studio&quot;">​</a></h3><ul><li>LangGraph Studio is a custom IDE for viewing and testing agents.</li><li>Studio can be run locally and opened in your browser on Mac, Windows, and Linux.</li><li>See documentation <a href="https://langchain-ai.github.io/langgraph/concepts/langgraph_studio/#local-development-server" target="_blank" rel="noreferrer">here</a> on the local Studio development server and <a href="https://langchain-ai.github.io/langgraph/cloud/how-tos/studio/quick_start/#local-development-server" target="_blank" rel="noreferrer">here</a>.</li><li>Graphs for LangGraph Studio are in the <code>module-x/studio/</code> folders.</li><li>To start the local development server, run the following command in your terminal in the <code>/studio</code> directory each module:</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>langgraph dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>You should see the following output:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>- 🚀 API: http://127.0.0.1:2024</span></span>
<span class="line"><span>- 🎨 Studio UI: https://smith.langchain.com/studio/?baseUrl=http://127.0.0.1:2024</span></span>
<span class="line"><span>- 📚 API Docs: http://127.0.0.1:2024/docs</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Open your browser and navigate to the Studio UI: <code>https://smith.langchain.com/studio/?baseUrl=http://127.0.0.1:2024</code>.</p><ul><li>To use Studio, you will need to create a .env file with the relevant API keys</li><li>Run this from the command line to create these files for module 1 to 5, as an example:</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>for i in {1..5}; do</span></span>
<span class="line"><span>  cp module-$i/studio/.env.example module-$i/studio/.env</span></span>
<span class="line"><span>  echo &quot;OPENAI_API_KEY=\\&quot;$OPENAI_API_KEY\\&quot;&quot; &gt; module-$i/studio/.env</span></span>
<span class="line"><span>done</span></span>
<span class="line"><span>echo &quot;TAVILY_API_KEY=\\&quot;$TAVILY_API_KEY\\&quot;&quot; &gt;&gt; module-4/studio/.env</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,37)])])}const b=a(t,[["render",o]]);export{h as __pageData,b as default};
